package com.iheart.slkp.client;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;

/**
 * @author 성인
 *  --2Byte---2Byte----------가변길이------
 * |		|		|					|
 * |Type	|Length	|	Message			|
 * |		|		|					|
 *  ------------------------------------
 */
public class SLKPClientMain {
	//
	
	private DataInputStream dis;	
	private DataOutputStream dos;
	private Socket socket;
	private String ip;
	private int port;

	public SLKPClientMain() {
		//
		ip = "127.0.0.1";
		port = 9999;
		try {
			socket = new Socket(ip, port);
			dis = new DataInputStream(socket.getInputStream());
			dos = new DataOutputStream(socket.getOutputStream());
			
		} catch (IOException e) {
			//
			e.printStackTrace();
		}
	}

	// 사용자 인증 프로토콜 전송 메서드 AB Type 사용
	public void userAuthentication(String msg) {
		//
		String type = "AB";		
		ByteBuffer bb = makeProtocol(msg, type);
				
				/** 여기까지 발신 **/
				try {
					dos.write(bb.array());
					System.out.println("발신완료");
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				
	}

	// 서버에게 메세지를 보내는 함수 : Type -> CD
	public void sendMessage(String msg) {
		//
		String type = "CD";
		
		ByteBuffer bb = makeProtocol(msg, type);
		
		/** 여기까지 발신 **/
		try {
			dos.write(bb.array());
			System.out.println("발신완료");
		} catch (IOException e) {
			// 
			e.printStackTrace();
		}

	}
	
	
	private ByteBuffer makeProtocol(String msg, String type) {
		int msgLength = msg.getBytes().length;
		System.out.println("메세지 길이 : " + msgLength);
		
		int maxLength = 2 + 2 + msgLength + 1;
		System.out.println("보내질 배열의 총 길이 : "+ maxLength);
		
		
		byte[] typeToByte = type.getBytes();
		System.out.println("Type의 Byte 길이 : "+ typeToByte.length);
		// Body의 길이 총 byte[] 의 길이 = body의 길이 + 4byte
		// int 는 4byte이기 때문에 2byte로 Header의 length를 2로 잡으려면 short로 변환해야한다.
		short len = (short) msgLength;		
		System.out.println("Body Length : " + len);
		
		byte[] lenToByte = SLKPUtil.shortToByteArray(len);
		System.out.println("len의 Byte 길이 : "+ lenToByte.length);
		
		// 바이트 버퍼의 길이를 4(헤더의 길이) + body의 길이로 지정
				ByteBuffer bb = ByteBuffer.allocate(maxLength);
				bb.clear(); // ByteBuffer의 position값을 limit값과 동일하게 둔다.
				
				/** SLKProtocol HEADER Start **/
				// Type
				bb.limit(2);
				bb.put(typeToByte);
				// Length
				bb.position(2);
				bb.limit(4);
				bb.put(lenToByte);
				/** SLKProtocol HEADER End **/
				
				
				/** SLKProtocol BODY Start **/
				bb.position(4);
				bb.limit(maxLength-1);
				bb.put(msg.getBytes());
				/** SLKProtocol BODY End **/
		return bb;
	}

	public static void main(String[] args) {
		SLKPClientMain client = new SLKPClientMain();
		//client.sendMessage("야이야이t");
		client.userAuthentication("test/test");
	}
}
