package com.iheart.slk.server;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class SLKPServer {
	//
	private ServerSocket server;
	private Socket socket;
	
	public SLKPServer(){
		//
		try {
			System.out.println("소캣 연결 대기중...");
			server = new ServerSocket(9999);
		} catch (IOException e) {
			//
			e.printStackTrace();
		}
		process();
	}
	
	private void process() {
		// 
		while(true){
			try {
				socket = server.accept(); // 소켓이 연결될때까지 blocking
				socket.setSoTimeout(10000);
				System.out.println("소켓 연결!!");
				System.out.println("Time Out " + "[" + socket.getSoTimeout() + "]");
				System.out.println("연결 정보 [IP] " + socket.getRemoteSocketAddress());
				System.out.println("연결 정보 [Port] " + socket.getPort());
				System.out.println("========================================");
//				SLKPServerThread thread = new SLKPServerThread(socket);
//				thread.start();
			} catch (IOException e) {
				//
				e.printStackTrace();
			}
		}
	}

	public static void main(String[] args) {
		//
		SLKPServer server = new SLKPServer();
		server.process();
	}
}
